[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "alexi"
dynamic = ["version"]
description = "\"ALexi, EXtracteur d'Information ad√©lois\""
readme = "README.md"
license = "MIT"
authors = [
    { name = "David Huggins-Daines", email = "district6@vdsa.ca" },
]
dependencies = [
    "beautifulsoup4",
    "joblib",
    "lxml",
    "pdfplumber",
    "scikit-learn",
    "sklearn-crfsuite",
    "tokenizers",
    "poutyne",
    "lunr[languages]",
    "unidecode",
]
[project.optional-dependencies]
dev = [
  "black",
  "isort",
  "flake8",
  "flake8-bugbear",
  "mypy",
  "coverage",
  "pytest",
  "pytest-cov",
]

[project.scripts]
alexi = "alexi:main"

[tool.hatch.version]
path = "alexi/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/alexi",
]

[tool.pytest.ini_options]
testpaths = ["test"]
addopts = "--cov=alexi --cov-report html"

[tool.hatch.envs.default]
features = [ "dev" ]

[tool.hatch.envs.default.scripts]
test = [
  "pytest", "coverage html"
]
lint = [
  "black --check alexi",
  "isort --profile black --check-only alexi test",
  "flake8 --color=never alexi test",
  "mypy --non-interactive --install-types alexi",
]
format = [
  "black alexi test",
  "isort alexi test",
]
train = [
"""python scripts/train_rnn.py --nepoch 45 -o alexi/models/rnn.pt \\
          data/*.csv data/patches/*.csv""",
"""python scripts/train_rnn_crf.py --nepoch 1 -i alexi/models/rnn.pt \\
          -o alexi/models/rnn_crf.pt data/*.csv data/patches/*.csv""",
"""python scripts/train_crf_seq.py \\
    --outfile alexi/models/crfseq.joblib.gz \\
    data/*.csv data/patches/*.csv""",
]

[tool.isort]
profile = "black"
